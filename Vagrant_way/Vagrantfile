
# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  # config.vm.box = "ubuntu/focal64"
  config.vm.box = "generic/alpine314"

  
  # via 127.0.0.1 to disable public access
  config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"


  config.vm.provider "virtualbox" do |vb|
    # Display the VirtualBox GUI when booting the machine
    vb.gui = true
    vb.memory = "2048"
    vb.customize ["modifyvm", :id, "--vram", "256"]
  end
  
  config.vm.provision "shell", inline: <<-SCRIPT
  echo "PRVI UPDATE"
  apt update 
  DEBIAN_FRONTEND=noninteractive apt upgrade -y

  # GUI 
  # DEBIAN_FRONTEND=noninteractive apt-get install -y xfce4 virtualbox-guest-dkms virtualbox-guest-utils virtualbox-guest-x11
  DEBIAN_FRONTEND=noninteractive apk add xfce4 xfce4-terminal xfce4-screensaver lightdm-gtk-greeter 
  # tuki so neki problemi
  # rc-service dbus start
  # rc-update add dbus
  
  # VBox dodatki
  VBoxClient --clipboard
  VBoxClient --draganddrop
  VBoxClient --display
  VBoxClient --checkhostversion
  VBoxClient --seamless
  

  # GNS3 z vgrajenim wiresharkom
  add-apt-repository -y ppa:gns3/ppa
  DEBIAN_FRONTEND=noninteractive apt install gns3-gui gns3-server
  
  SCRIPT
  
  
  config.vm.provision "shell" do |s|
    s.privileged = true
    s.inline = "echo reboot is happening"
    s.reboot = true
  end

end
